name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run Gradle Release
        run: ./gradlew release
      - name: Upload tag number
        uses: actions/upload-artifact@v2
        with:
          name: tag
          path: tag.txt
      - name: Commit release changes
        uses: EndBug/add-and-commit@v7
        with:
          message: "[ci skip] Bump version number"
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
      - name: Set Environment
        run: |
          echo "TAG_NUMBER=$(cat tag.txt)" >> $GITHUB_ENV
          echo "RELEASE=$(cat release.txt)" >> $GITHUB_ENV
      - name: Build with Gradle
        run: ./gradlew build
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push tag
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: ${{ env.TAG_NUMBER }}.jar
          push: true
          tags: mbruty/swgoh-api:${{ env.TAG_NUMBER }}
      - name: Build and push release
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: ${{ env.TAG_NUMBER }}.jar
          push: true
          tags: mbruty/swgoh-api:${{ env.RELEASE }}

  deploy:
    name: Deploy container
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: SSH pipeline
        uses: cross-the-world/ssh-pipeline@master
        with:
          host: ${{ secrets.DC_HOST }}
          user: ${{ secrets.DC_USER }}
          pass: ${{ secrets.DC_PASS }}
          connect_timeout: 10s
          script: |
            docker container stop API
            docker container rm API
            docker pull mbruty/swgoh-api:latest
            docker run -d -p 80:8080 --name API mbruty/swgoh-api
  tag:
    name: Create a GitHub tag
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download tag
        uses: actions/download-artifact@v2
      - name: Set Environment
        run: echo "TAG_NUMBER=$(cat tag.txt)" >> $GITHUB_ENV
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.TAG_NUMBER }}',
              sha: context.sha
            })
  deploy-snapshot:
    name: Deploy snapshot container
    needs: build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: SSH pipeline
        uses: cross-the-world/ssh-pipeline@master
        with:
          host: ${{ secrets.DC_HOST }}
          user: ${{ secrets.DC_USER }}
          pass: ${{ secrets.DC_PASS }}
          connect_timeout: 10s
          script: |
            docker container stop API
            docker container rm API
            docker pull mbruty/swgoh-api:snapshot
            docker run -d -p 8080:8080 --name API mbruty/swgoh-api





