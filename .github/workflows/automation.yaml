name: Build and deploy

on:
  push:
    branches:
      - main
      - ci-release
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run Gradle Release
        run: ./gradlew release
      - name: Set Env
        run: |
          ./gradlew version
          echo "TAG_NUMBER=$(cat tag.txt)" >> $GITHUB_ENV
      - name: Build with Gradle
        run: ./gradlew build
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: mbruty/swgoh-api:${{ env.TAG_NUMBER }}

# Ignore deploying for now...
#  deploy:
#    name: Deploy container
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: SSH pipeline
#        uses: cross-the-world/ssh-pipeline@master
#        with:
#          host: ${{ secrets.DC_HOST }}
#          user: ${{ secrets.DC_USER }}
#          pass: ${{ secrets.DC_PASS }}
#          connect_timeout: 10s
#          script: |
#            docker container stop API
#            docker container rm API
#            docker pull mbruty/swgoh-api
#            docker run -d -p 80:8080 --name API mbruty/swgoh-api





